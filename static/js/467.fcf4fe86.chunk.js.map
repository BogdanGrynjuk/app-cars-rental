{"version":3,"file":"static/js/467.fcf4fe86.chunk.js","mappings":"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","sources":["components/FilterSection/CustomSelect.jsx","components/FilterSection/FilterSection.styled.jsx","components/FilterSection/FilterSection.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst customStyles = {\n  control: provided => ({\n    ...provided,    \n    width: '100%',\n    height: '48px',\n    padding: '0px 8px',\n    backgroundColor: 'rgba(247, 247, 251, 1)',\n    borderRadius: '12px',\n    border: 'none',\n    fontSize: '16px',\n    fontWeight: '600',\n    lineHeight: '20px',        \n    svg: {      \n      color: \"rgba(18, 20, 23, 1)\"\n    },\n    boxShadow:\" rgba(0, 0, 0, 0.5) 2px 3px 5px\",\n    '&:hover': {\n      boxShadow:\" rgba(0, 0, 0, 0.5) 2px 8px 5px\",\n    },\n  }),\n\n  valueContainer: provided => ({ ...provided, padding: 0, }),\n  \n  menu: provided =>  ({\n    ...provided,\n    padding: '14px 8px',\n    borderRadius: '12px',\n    boxShadow:\" rgba(0, 0, 0, 0.5) 2px 8px 5px\",\n  }),\n  menuList: provided => ({\n    ...provided,\n    paddingRight: '8px',\n    '::-webkit-scrollbar': {\n      width: '7px',      \n    },\n    '::-webkit-scrollbar-thumb': {\n      background: 'rgba(18, 20, 23, 0.5)',\n      borderRadius: '12px',\n    },\n  }),\n  option: (provided, state) => ({\n    ...provided,        \n    backgroundColor: 'transparent',\n    color: state.isSelected ? 'rgba(52, 112, 255, 1)' : 'rgba(18, 20, 23, 0.5)',\n    fontWeight: state.isSelected && '600',\n    cursor: 'pointer',\n    \"&:hover\": {\n        color: state.isSelected ? 'rgba(52, 112, 255, 1)' : 'rgba(18, 20, 23, 1)',\n        backgroundColor: \"transparent\",\n      },\n  }),\n  dropdownIndicator: (provided, state) => {    \n    return ({\n      ...provided,\n      color: 'rgba(18, 20, 23, 1)',\n      cursor: 'pointer',\n      transform: state.isFocused && 'rotate(180deg)',\n      padding:  0,\n    })\n  },\n  indicatorSeparator: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n  placeholder: (provided, state) => ({\n    ...provided,\n    // display: state.isFocused && \"none\",\n    backgroundColor: 'rgba(247, 247, 251, 1)',\n    color: 'rgba(18, 20, 23, 1)',\n    fontSize: '16px',\n    fontWeight: '500',\n    lineHeight: '20px',    \n  }),\n  \n};\n\nconst CustomSelect = ({ field, form, options, placeholder }) => {\n  const selectedOption = options.find((option) => option.value === field.value) || '';\n\n  const handleChange = (selectedOption) => {\n    form.setFieldValue(field.name, selectedOption ? selectedOption.value : '');\n  };\n  const handleBlur = () => {\n    form.setFieldTouched(field.name, true);\n  };\n\n  return (\n    <Select\n      name={field.name}\n      styles={customStyles}\n      options={options}\n      placeholder={placeholder}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      value={selectedOption || ''}\n    />\n  );\n};\n\nCustomSelect.propTypes = {\n  field: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.any,\n  }),\n  form: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  placeholder: PropTypes.string,\n};\n\nexport default CustomSelect;","import styled from \"@emotion/styled\";\nimport { Field, Form, ErrorMessage } from \"formik\";\n\n\nexport const Wrapper = styled.div`  \n  width: 100%;  \n  color: ${p => p.theme.colors.black};\n  font-family: ${p => p.theme.fontFamily.manrope}; \n`; \n\n\nexport const FormikForm = styled(Form)`\n  width: 100%;\n  margin: 18px auto 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 18px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    flex-direction: row;       \n  };\n\n   @media screen and (${p => p.theme.mq.desktop}) {    \n    margin-bottom: 50px;\n    width: 80%;\n  };\n`;\n\n\nexport const FormikControl = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n`;\n\n\nexport const Label = styled.label`  \n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 18px;\n  color: ${p => p.theme.colors.grey};\n`;\n\nexport const GroupInputs = styled.div`\n  display: flex;\n  height: 48px;\n  border-radius: 14px; \n  box-shadow: rgba(0, 0, 0, 0.5) 2px 3px 5px;\n  overflow: hidden;\n\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.5) 2px 8px 5px;\n  };\n`;\n\nexport const GroupLabel = styled(Label.withComponent('p'))``;\n\nexport const Input = styled(Field)`\n  width: 100%; \n  outline: none;\n  padding: 14px;\n  background-color: rgba(247, 247, 251, 1);\n  border: none;\n  font-family: ${p => p.theme.fontFamily.manrope};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  line-height: 20px;\n  color: ${p => p.theme.colors.black};\n\n  &::placeholder{   \n    color: ${p => p.theme.colors.black};\n    opacity: 1;\n  };\n\n  &[name=\"mileage.from\"]{\n    border-right: ${p => p.theme.borders.normal} ${p => p.theme.colors.lighteGrey};\n  };  \n`;\n\nexport const BtnControl = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 18px;\n  align-self: flex-end;\n`\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 12px;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.blue};\n  color: ${p => p.theme.colors.white};\n  font-family: ${p => p.theme.fontFamily.manrope};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  line-height: 24px;\n  box-shadow: rgba(0, 0, 0, 0.5) 2px 3px 5px;\n  -webkit-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.lighteBlue};\n    box-shadow: rgba(0, 0, 0, 0.5) 2px 8px 5px;\n  };\n`;\n\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  text-align: center;\n  color: red;\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  line-height: 16px;  \n`;\n\n\n\n","import { Formik, Field, ErrorMessage } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetFilter, updateFilter } from \"redux/filtersSlice\";\nimport { selectAllCars, selectMaxMileage, selectMinMileage, selectMaxPrice, selectMinPrice } from \"redux/selectors\";\n\nimport * as Yup from \"yup\";\n\nimport CustomSelect from \"./CustomSelect\";\nimport { FormikControl, FormikForm, Label, GroupLabel, Wrapper, GroupInputs, Input, ErrorMsg, BtnControl, Button } from \"./FilterSection.styled\";\nimport GeneralContainer from \"components/GeneralContainer\";\n\nconst FilterSection = () => {\n  const dispatch = useDispatch();\n\n  const cars = useSelector(selectAllCars);\n  const maxMileage = useSelector(selectMaxMileage);\n  const minMileage = useSelector(selectMinMileage);\n  const maxPrice = useSelector(selectMaxPrice);\n  const minPrice = useSelector(selectMinPrice);\n\n  const uniqueBrends = new Set(cars.map(car => car.make));\n  const brandOptions = [...uniqueBrends].sort((a, b) => a.localeCompare(b)).map(brand => ({ label: brand, value: brand }));\n\n  const priceOptions = [];\n  const step = 10;\n  const firstPriceOption = Math.ceil(minPrice / 10) * 10;\n  const lastPriceOption = Math.ceil(maxPrice / 10) * 10;\n\n  for (let i = firstPriceOption; i <= lastPriceOption; i += step) {\n    priceOptions.push({ label: i, value: i })\n  };\n\n  const initialValues = {\n    brand: '',\n    price: '',\n    mileage: {\n      from: '',\n      to: '',\n    },\n  };\n\n  const handleSubmit = (values) => {\n    console.log(values);\n    dispatch(updateFilter(values));\n  };    \n\n  const handleResetFilter = (formik) => {\n    dispatch(resetFilter());\n    formik.resetForm(); \n  };  \n\n  const validationSchema = Yup.object().shape({\n    brand: Yup.string(),\n    price: Yup.number(),\n    mileage: Yup.object().shape({\n      from: Yup.number()\n        .positive('Mileage must be a positive number')\n        .integer('Vehicle mileage must be an integer')\n        .max(maxMileage, `The highest mileage in our catalog ${maxMileage}`)\n        .test({\n          name: 'checkMileageRange',\n          exclusive: false,\n          message: 'The starting mileage should be less than or equal to the ending mileage',\n          test: function (from) {\n            const to = this.parent.mileage?.to;\n            return from === undefined || to === undefined || from <= to;\n          },\n        }),\n      to: Yup.number()\n        .positive('Mileage must be a positive number')\n        .integer('Vehicle mileage must be an integer')\n        .min(minMileage, `Lowest mileage in our catalog ${minMileage}`)\n        .when('from', (from, schema) => {\n          return schema.test({\n            name: 'checkMileageRange',\n            exclusive: false,\n            message: 'The starting mileage should be less than or equal to the ending mileage',\n            test: (to) => from === undefined || to === undefined || to >= from,\n          });\n        }),\n    }),\n  });  \n\n  return (\n    <Wrapper>\n      <GeneralContainer>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n          validateOnChange={false}\n          validateOnBlur={false}\n        >\n          {formik => (\n            <FormikForm>\n              <FormikControl>\n                <Label htmlFor=\"brand\">Car brand</Label>\n                <Field name=\"brand\" component={CustomSelect} options={brandOptions} placeholder=\"Enter the text\" />\n                <ErrorMessage name=\"brand\" />\n              </FormikControl>\n\n              <FormikControl>\n                <Label htmlFor=\"price\">Price/ 1 hour</Label>\n                <Field name=\"price\" component={CustomSelect} options={priceOptions} placeholder=\"To $\" />\n                <ErrorMessage name=\"price\" />\n              </FormikControl>\n\n              <FormikControl role=\"group\" aria-labelledby=\"mileage-head\">\n                <GroupLabel id=\"mileage-head\">Сar mileage / km</GroupLabel>\n\n                <GroupInputs>\n                  <FormikControl>\n                    <Input type=\"number\" name=\"mileage.from\" placeholder=\"From\" />\n                    \n                  </FormikControl>\n          \n                  <FormikControl>\n                    <Input type=\"number\" name=\"mileage.to\" placeholder=\"To\" />\n                    \n                  </FormikControl>\n                </GroupInputs>\n                <ErrorMsg name=\"mileage.from\" component={'div'} />\n                <ErrorMsg name=\"mileage.to\" component={'div'} />\n\n              </FormikControl>\n        \n              <BtnControl>\n                <Button type=\"submit\">Search</Button>\n                <Button type=\"reset\" onClick={() => handleResetFilter(formik)}>Clear</Button>\n              </BtnControl>\n            </FormikForm>\n          )}\n        </Formik>\n      </GeneralContainer>\n      \n    </Wrapper>\n  );\n};\n\nexport default FilterSection;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilteredCars } from \"redux/selectors\";\n\nimport CarsList from \"components/CarsList\";\nimport FilterSection from \"components/FilterSection\";\nimport { resetFilter } from \"redux/filtersSlice\";\nimport { useEffect } from \"react\";\n\n\n\nconst CatalogPage = () => {\n  const filteredCars = useSelector(selectFilteredCars);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(resetFilter());\n  }, [dispatch])\n  \n  return (\n    <>\n      <FilterSection/>\n      <CarsList cars={ filteredCars } />\n    </>\n  );\n};\n\nexport default CatalogPage;"],"names":["customStyles","control","provided","_objectSpread","width","height","padding","backgroundColor","borderRadius","border","fontSize","fontWeight","lineHeight","svg","color","boxShadow","valueContainer","menu","menuList","paddingRight","background","option","state","isSelected","cursor","dropdownIndicator","transform","isFocused","indicatorSeparator","display","placeholder","_ref","field","form","options","selectedOption","find","value","_jsx","Select","name","styles","onChange","setFieldValue","onBlur","setFieldTouched","Wrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","black","fontFamily","manrope","FormikForm","Form","_templateObject2","mq","tablet","desktop","FormikControl","_templateObject3","Label","_templateObject4","fontSizes","xs","fontWeights","medium","grey","GroupInputs","_templateObject5","GroupLabel","withComponent","_templateObject6","Input","Field","_templateObject7","m","bold","borders","normal","lighteGrey","BtnControl","_templateObject8","Button","_templateObject9","none","radii","blue","white","s","lighteBlue","ErrorMsg","ErrorMessage","_templateObject10","dispatch","useDispatch","cars","useSelector","selectAllCars","maxMileage","selectMaxMileage","minMileage","selectMinMileage","maxPrice","selectMaxPrice","minPrice","selectMinPrice","uniqueBrends","Set","map","car","make","brandOptions","_toConsumableArray","sort","a","b","localeCompare","brand","label","priceOptions","firstPriceOption","Math","ceil","lastPriceOption","i","push","validationSchema","Yup","shape","price","mileage","from","positive","integer","max","concat","test","exclusive","message","_this$parent$mileage","to","this","parent","undefined","min","when","schema","children","GeneralContainer","Formik","initialValues","onSubmit","values","console","log","updateFilter","validateOnChange","validateOnBlur","formik","_jsxs","htmlFor","component","CustomSelect","role","id","type","onClick","resetFilter","resetForm","handleResetFilter","filteredCars","selectFilteredCars","useEffect","_Fragment","FilterSection","CarsList"],"sourceRoot":""}